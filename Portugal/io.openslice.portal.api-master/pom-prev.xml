<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>io.openslice</groupId>
  <artifactId>io.openslice.portal.api</artifactId>
  <version>0.0.1-SNAPSHOT</version>

  <name>io.openslice.portal.api</name>
  <url>http://maven.apache.org</url>
  

	<properties>
		<jackson.version>2.8.11</jackson.version>
		<maven-license-plugin.version>1.2.5</maven-license-plugin.version>
		<cxf.version>3.2.5</cxf.version>
		<httpclient.version>4.2.1</httpclient.version>
		<camel.version>2.24.1</camel.version>
		<activemq.version>5.15.9</activemq.version>

		<!-- repositories for distribution -->
		<!-- snapshots -->
		<repoMavenSnapshotId>repo-snapshot</repoMavenSnapshotId>
		<repoMavenSnapshotName>repo-snapshot</repoMavenSnapshotName>
		<repoMavenSnapshotUrl>${nexusRepositories}/snapshots</repoMavenSnapshotUrl>
		<!-- releases -->
		<repoMavenId>repo-release</repoMavenId>
		<repoMavenName>repo-release</repoMavenName>
		<repoMavenUrl>${nexusRepositories}/releases</repoMavenUrl>
		<!-- thirdparty -->
		<repoMavenThirdpartyId>repo-third-party-release</repoMavenThirdpartyId>
		<repoMavenThirdpartyName>repo-third-party-release</repoMavenThirdpartyName>
		<repoMavenThirdpartyUrl>${nexusRepositories}/thirdparty</repoMavenThirdpartyUrl>


		<!-- encoding -->

		<encoding>utf-8</encoding>
		<encoding.build.source>${encoding}</encoding.build.source>
		<encoding.report.out>${encoding}</encoding.report.out>
		<project.build.sourceEncoding>${encoding}</project.build.sourceEncoding>
		<project.reporting.outputEncoding>${encoding}</project.reporting.outputEncoding>

		<openjpa.version>2.4.2</openjpa.version>
		<spring.version>4.3.14.RELEASE</spring.version>

		<shiro.version>1.2.3</shiro.version>
		<jetty.version>9.4.19.v20190610</jetty.version>
	</properties>


	<dependencies>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-rs-client</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-transports-http-jetty</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-jaxrs</artifactId>
			<version>${cxf.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-rs-security-cors</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-rs-security-oauth2</artifactId>
			<version>${cxf.version}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-yaml</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-core</artifactId>
			<version>${camel.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-test</artifactId>
			<version>${camel.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-spring</artifactId>
			<version>${camel.version}</version>
		</dependency>
		<dependency>
	      <groupId>org.apache.camel</groupId>
	      <artifactId>camel-jms</artifactId>
			<version>${camel.version}</version>
	    </dependency>
		<dependency>
	      <groupId>org.apache.camel</groupId>
	      <artifactId>camel-http</artifactId>
			<version>${camel.version}</version>
	    </dependency>
		<dependency>
	      <groupId>org.apache.camel</groupId>
	      <artifactId>camel-stream</artifactId>
			<version>${camel.version}</version>
	    </dependency>
		<dependency>
	      <groupId>org.apache.camel</groupId>
	      <artifactId>camel-jackson</artifactId>
			<version>${camel.version}</version>
	    </dependency>
	
	
		<dependency>
	      <groupId>org.apache.activemq</groupId>
	      <artifactId>activemq-camel</artifactId>
			<version>${activemq.version}</version>
	    </dependency>
	    <dependency>
	      <groupId>org.apache.activemq</groupId>
	      <artifactId>activemq-broker</artifactId>
			<version>${activemq.version}</version>
	    </dependency>
	    <dependency>
	      <groupId>org.apache.activemq</groupId>
	      <artifactId>activemq-client</artifactId>
			<version>${activemq.version}</version>
	      <!-- lets use JMS 2.0 api but camel-jms still works with ActiveMQ 5.x that is JMS 1.1 only -->
	      <exclusions>
	        <exclusion>
	          <groupId>org.apache.geronimo.specs</groupId>
	          <artifactId>geronimo-jms_1.1_spec</artifactId>
	        </exclusion>
	      </exclusions>
	    </dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-expression</artifactId>
		    <version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-exec</artifactId>
			<version>1.2</version>
		</dependency>

		<!-- openjpa -->

		<dependency>
			<groupId>org.apache.openjpa</groupId>
			<artifactId>openjpa</artifactId>
			<version>${openjpa.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.openjpa</groupId>
			<artifactId>openjpa-jdbc</artifactId>
			<version>${openjpa.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.openjpa</groupId>
			<artifactId>openjpa-persistence-jdbc</artifactId>
			<version>${openjpa.version}</version>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.4.179</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
		</dependency>

		<!-- Shiro dependencies: -->
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-core</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-web</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-spring</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-servlets</artifactId>
			<version>${jetty.version}</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.33</version>
		</dependency>

		<dependency>
			<groupId>org.pacesys</groupId>
			<artifactId>openstack4j</artifactId>
			<version>3.1.0</version>
			<classifier>withdeps</classifier>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>1.7.5</version>
		</dependency>

		<dependency>
			<groupId>com.sun.mail</groupId>
			<artifactId>javax.mail</artifactId>
			<version>1.5.2</version>
		</dependency>
		
		<dependency>
			<groupId>io.openslice</groupId>
			<artifactId>io.openslice.sol005nbi.osm5</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		
		
		<!-- swagger spec will be under http://localhost:13000/opensliceportal/services/api/swagger.json 
			. TO create useful clients and specs go to https://editor.swagger.io -->
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-rs-service-description-swagger</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>swagger-ui</artifactId>
			<version>3.1.7</version>
		</dependency>
	
		<dependency>
		    <groupId>com.google.guava</groupId>
		    <artifactId>guava</artifactId>
		    <version>23.3-jre</version>
		</dependency> 
	</dependencies>


	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<source>1.8</source>
						<target>1.8</target>
					</configuration>
				</plugin>

				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.openjpa
										</groupId>
										<artifactId>
											openjpa-maven-plugin
										</artifactId>
										<versionRange>
											[2.2.1,)
										</versionRange>
										<goals>
											<goal>enhance</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>

			<!-- openjpa enhance plugin configuration -->
			<plugin>
				<groupId>org.apache.openjpa</groupId>
				<artifactId>openjpa-maven-plugin</artifactId>
				<version>${openjpa.version}</version>
				<configuration>
					<includes>io.openslice.portal.api.model</includes>
					<excludes>**/io.openslice.portal.api/*.class</excludes>
					<addDefaultConstructor>true</addDefaultConstructor>
					<enforcePropertyRestrictions>true</enforcePropertyRestrictions>

				</configuration>
				<executions>
					<execution>
						<id>enhancer-classes</id>
						<phase>process-classes</phase>
						<goals>
							<goal>enhance</goal>
						</goals>
					</execution>
				</executions>

				<dependencies>
					<dependency>
						<groupId>org.apache.openjpa</groupId>
						<artifactId>openjpa</artifactId>
						<!-- set the version to be the same as the level in your runtime -->
						<version>${openjpa.version}</version>
					</dependency>
				</dependencies>
			</plugin>

			<!-- license plugin -->

			<plugin>
				<groupId>com.google.code.maven-license-plugin</groupId>
				<artifactId>maven-license-plugin</artifactId>
				<version>${maven-license-plugin.version}</version>
				<configuration>
					<header>src/license/header.txt</header>
					<includes>
						<include>src/main/**/*.java</include>
						<include>src/test/**/*.java</include>
					</includes>
				</configuration>
				<executions>
					<execution>
						<id>format-classes</id>
						<goals>
							<goal>format</goal>
						</goals>
					</execution>
					<execution>
						<id>check-classes</id>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>


		</plugins>
	</build>


	<repositories>
		<!-- ci-cpr02 Nexus Repositories -->
		<repository>
			<id>${repoMavenSnapshotId}</id>
			<name>${repoMavenSnapshotName}</name>
			<url>${repoMavenSnapshotUrl}</url>
		</repository>
		<repository>
			<id>${repoMavenId}</id>
			<name>${repoMavenName}</name>
			<url>${repoMavenUrl}</url>
		</repository>
		<repository>
			<id>${repoMavenThirdpartyId}</id>
			<name>${repoMavenThirdpartyName}</name>
			<url>${repoMavenThirdpartyUrl}</url>
		</repository>

		<!-- Remote Repositories -->
		<repository>
			<id>central</id>
			<name>central-repository</name>
			<url>http://repo1.maven.org/maven2</url>
		</repository>
		<repository>
			<id>central2</id>
			<name>central2-repository</name>
			<url>http://repo2.maven.org/maven2</url>
		</repository>

		<!-- SpringSource repositories -->
		<repository>
			<id>com.springsource.repository.libraries.release</id>
			<name>SpringSource Enterprise Bundle Repository - SpringSource Library Releases</name>
			<url>http://repository.springsource.com/maven/libraries/release</url>
		</repository>
		<repository>
			<id>com.springsource.repository.libraries.external</id>
			<name>SpringSource Enterprise Bundle Repository - External Library Releases</name>
			<url>http://repository.springsource.com/maven/libraries/external</url>
		</repository>


	</repositories>



	<profiles>
		<!-- To make documentation: mvn clean -Pdocbkx install -Dmaven.test.skip=true -->
		<profile>
			<id>docbkx</id>
			<build>
				<defaultGoal>package</defaultGoal>
				<plugins>
					<!-- documentation plugin -->
					<plugin>
						<groupId>com.agilejava.docbkx</groupId>
						<artifactId>docbkx-maven-plugin</artifactId>
						<version>2.0.14</version>
						<executions>
							<execution>
								<id>doc</id>
								<phase>package</phase>
								<goals>
									<goal>generate-html</goal>
								</goals>
							</execution>
						</executions>

						<dependencies>
							<dependency>
								<groupId>net.sf.docbook</groupId>
								<artifactId>docbook-xml</artifactId>
								<version>5.0-all</version>
								<classifier>resources</classifier>
								<type>zip</type>
								<scope>runtime</scope>
							</dependency>
							<dependency>
								<groupId>net.sf.xslthl</groupId>
								<artifactId>xslthl</artifactId>
								<version>2.0.1</version>
								<scope>runtime</scope>
							</dependency>
							<dependency>
								<groupId>net.sf.offo</groupId>
								<artifactId>fop-hyph</artifactId>
								<version>1.2</version>
								<scope>runtime</scope>
							</dependency>
							
						</dependencies>
						<configuration>
							<preProcess>
								<copy todir="target/docs/html/portal_manual/images">
									<fileset dir="src/documentation/docbkx/images" />
								</copy>
								<copy todir="target/docs/html/portal_manual/css">
									<fileset dir="src/documentation/docbkx/css" />
								</copy>
								<copy todir="target/docs/html/portal_manual/font">
									<fileset dir="src/documentation/docbkx/font" />
								</copy>
								<copy todir="target/docs/html/portal_manual/js">
									<fileset dir="src/documentation/docbkx/js" />
								</copy>
							</preProcess>
							<htmlStylesheet>css/docbook.css</htmlStylesheet>
							<htmlCustomization>${project.basedir}/src/documentation/docbkx-stylesheet/html/docbook.xsl</htmlCustomization>

							<sourceDirectory>${project.basedir}/src/documentation/docbkx</sourceDirectory>
							<targetDirectory>target/docs/html</targetDirectory>
							<xincludeSupported>true</xincludeSupported>
							<useExtensions>1</useExtensions>
							<calloutsExtension>1</calloutsExtension>
							<paperType>A4</paperType>
							<chunkedOutput>true</chunkedOutput><!-- this means that will produce 
								per page.False makes all in one page -->
							<fop1Extensions>1</fop1Extensions>
							<foCustomization>${project.basedir}/src/documentation/docbkx-stylesheet/html/docbook.xsl</foCustomization>
							<includes> portal_manual.xml, test.xml</includes>
						</configuration>

					</plugin>

				</plugins>

			</build>

		</profile>


		<profile>
			<!--For continuous running: "mvn clean -Pjetty.integration jetty:run" 
				and access to http://127.0.0.1:13000/jaxrs-srvtest/hello/echo/SierraTangoNevadaxx 
				For jetty integration test: mvn clean -Pjetty.integration verify -->
			<id>jetty.integration</id>

			<build>
				<pluginManagement>
					<plugins>

						<plugin>
							<groupId>org.eclipse.jetty</groupId>
							<artifactId>jetty-maven-plugin</artifactId>
							<version>${jetty.version}</version>
							<configuration>
								<!-- Uncomment this to run it with jetty:run and secure port 8443 
									<jettyXml>${basedir}/src/test/resources/jetty.xml,${basedir}/src/test/resources/jetty-ssl.xml,${basedir}/src/test/resources/jetty-https.xml</jettyXml> -->

								<httpConnector>
									<port>13000</port>
								</httpConnector>
								<scanIntervalSeconds>4</scanIntervalSeconds>

								<webApp>
									<contextPath>/opensliceportal</contextPath>
								</webApp>
								<contextHandlers>
									<contextHandler
										implementation="org.eclipse.jetty.server.handler.ContextHandler">
										<contextPath>/static</contextPath>
										<resourceBase>/home/ubuntu/.portal/metadata/</resourceBase>
										<handler implementation="org.eclipse.jetty.server.handler.ResourceHandler">
											<cacheControl>no-cache</cacheControl>
											<directoriesListed>true</directoriesListed>
										</handler>
									</contextHandler>
									<contextHandler
										implementation="org.eclipse.jetty.server.handler.ContextHandler">
										<contextPath>/mp</contextPath>
										<resourceBase>${project.basedir}/../io.openslice.portal.web/src</resourceBase>
										<handler implementation="org.eclipse.jetty.server.handler.ResourceHandler">
											<cacheControl>no-cache</cacheControl>
											<directoriesListed>true</directoriesListed>
										</handler>
									</contextHandler>

								</contextHandlers>

							</configuration>
							<executions>
								<execution>
									<id>run-jetty</id>
									<goals>
										<goal>run</goal>
									</goals>
								</execution>
							</executions>
						</plugin>
					</plugins>
				</pluginManagement>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<version>1.5</version>
						<executions>
							<execution>
								<id>reserve-network-port</id>
								<goals>
									<goal>reserve-network-port</goal>
								</goals>
								<phase>process-test-resources</phase>
								<configuration>
									<portNames>
										<portName>test.server.port</portName>
									</portNames>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.eclipse.jetty</groupId>
						<artifactId>jetty-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>start-jetty</id>
								<goals>
									<goal>run-war</goal>
								</goals>
								<phase>pre-integration-test</phase>
								<configuration>
									<httpConnector>
										<port>${test.server.port}</port>
									</httpConnector>
									<webApp>
										<contextPath>/rsportal-srvtest</contextPath>
									</webApp>
									<stopPort>9999</stopPort>
									<stopKey>STOP</stopKey>
									<daemon>true</daemon>
								</configuration>
							</execution>
							<execution>
								<id>stop-jetty</id>
								<goals>
									<goal>stop</goal>
								</goals>
								<phase>post-integration-test</phase>
								<configuration>
									<stopKey>STOP</stopKey>
									<stopPort>9999</stopPort>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>2.8.1</version>
						<executions>
							<execution>
								<id>integration-test</id>
								<goals>
									<goal>integration-test</goal>
								</goals>
								<configuration>
									<systemPropertyVariables>
										<service.url>http://localhost:${test.server.port}/rsportal-srvtest</service.url>
									</systemPropertyVariables>
								</configuration>
							</execution>
							<execution>
								<id>verify</id>
								<goals>
									<goal>verify</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>



		</profiles>
</project>